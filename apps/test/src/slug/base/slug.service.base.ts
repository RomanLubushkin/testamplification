/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Slug } from "@prisma/client";

export class SlugServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.SlugCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlugCountArgs>
  ): Promise<number> {
    return this.prisma.slug.count(args);
  }

  async slugs<T extends Prisma.SlugFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlugFindManyArgs>
  ): Promise<Slug[]> {
    return this.prisma.slug.findMany(args);
  }
  async slug<T extends Prisma.SlugFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlugFindUniqueArgs>
  ): Promise<Slug | null> {
    return this.prisma.slug.findUnique(args);
  }
  async createSlug<T extends Prisma.SlugCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlugCreateArgs>
  ): Promise<Slug> {
    return this.prisma.slug.create<T>(args);
  }
  async updateSlug<T extends Prisma.SlugUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlugUpdateArgs>
  ): Promise<Slug> {
    return this.prisma.slug.update<T>(args);
  }
  async deleteSlug<T extends Prisma.SlugDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlugDeleteArgs>
  ): Promise<Slug> {
    return this.prisma.slug.delete(args);
  }
}
